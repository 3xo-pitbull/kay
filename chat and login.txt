<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Firebase Authentication and Chat Room</title>
  <style>
    .container {
      max-width: 300px;
      margin: 0 auto;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    input, button {
      display: block;
      margin-bottom: 10px;
    }

    button {
      background-color: #007bff;
      color: #fff;
      border: none;
      padding: 10px 15px;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #0056b3;
    }

    .userInfoContainer, #chatContainer {
      max-width: 300px;
      margin: 20px auto;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    #messagesContainer {
      margin-bottom: 20px;
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 5px;
      overflow-y: scroll;
      max-height: 200px;
    }

    #messageInput {
      width: calc(100% - 80px);
      margin-top: 10px;
    }

    .chatBox {
      width: 100%;
      max-width: 400px;
      margin: 20px auto;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    .message {
      margin-bottom: 10px;
      padding: 10px;
      border-radius: 5px;
    }

    .sentMessage {
      background-color: #007bff;
      color: #fff;
      text-align: right;
    }

    .receivedMessage {
      background-color: #f0f0f0;
      color: #000;
      text-align: left;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Login</h2>
    <input type="email" id="email" placeholder="Email">
    <input type="password" id="password" placeholder="Password">
    <button id="loginBtn" onclick="login()">Login</button>
    <p id="message"></p>
    <button id="showUserInfoBtn" onclick="toggleUserInfo()" style="display:none;">Show User Info</button>
  </div>

  <div class="userInfoContainer" id="userInfoContainer">
    <h3>User Info</h3>
    <ul id="userInfo"></ul>
  </div>

  <div class="chatBox" id="chatBox" style="display: none;">
    <div id="chatContainer">
      <h2>Chat Room</h2>
      <div id="messagesContainer"></div>
      <input type="text" id="messageInput" placeholder="Type your message...">
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-database.js"></script>
  <script>
    // Firebase configuration
    const firebaseConfig = {
    apiKey: "AIzaSyBL2hddqUVVSUDbPB-6GP2CgFUkzWKa4Nk",
  authDomain: "comid-b75fd.firebaseapp.com",
  projectId: "comid-b75fd",
  storageBucket: "comid-b75fd.appspot.com",
  messagingSenderId: "1055136088878",
  appId: "1:1055136088878:web:c9b4fb7f1d2e52c18fb0bf",
  measurementId: "G-GV2QSP91JB"
    };

    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);

    // Get references to DOM elements
    const messagesContainer = document.getElementById('messagesContainer');
    const messageInput = document.getElementById('messageInput');

    // Function to send a message
    function sendMessage() {
      const messageText = messageInput.value;
      if (messageText.trim() !== '') {
        firebase.auth().onAuthStateChanged((user) => {
          if (user) {
            firebase.database().ref('users/' + user.uid).once('value').then((snapshot) => {
              const userInfo = snapshot.val();
              const username = userInfo.username;
              firebase.database().ref('messages').push({
                username: username,
                message: messageText,
                timestamp: firebase.database.ServerValue.TIMESTAMP
              });
              messageInput.value = '';
            });
          } else {
            alert('User not logged in.');
          }
        });
      }
    }

    // Function to display messages
    function displayMessages(snapshot) {
      messagesContainer.innerHTML = '';
      snapshot.forEach((childSnapshot) => {
        const message = childSnapshot.val();
        const messageElement = document.createElement('div');
        messageElement.textContent = message.username + ": " + message.message;
        messageElement.classList.add('message');
        if (message.username === currentUser) {
          messageElement.classList.add('sentMessage');
        } else {
          messageElement.classList.add('receivedMessage');
        }
        messagesContainer.appendChild(messageElement);
      });
    }

    // Listen for new messages
    firebase.database().ref('messages').orderByChild('timestamp').on('value', (snapshot) => {
      displayMessages(snapshot);
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    });

    // Current logged in user
    let currentUser = '';

    // Login function
    function login() {
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;

      firebase.auth().signInWithEmailAndPassword(email, password)
        .then((userCredential) => {
          // Signed in
          const user = userCredential.user;
          currentUser = user.uid;
          document.getElementById('message').innerHTML = `Logged in as ${user.email}`;
          
          // Display user information
          const userInfoRef = firebase.database().ref('users/' + user.uid);
          userInfoRef.on('value', (snapshot) => {
            const userInfo = snapshot.val();
            const userInfoList = document.getElementById('userInfo');
            userInfoList.innerHTML = '';
            for (let key in userInfo) {
              const listItem = document.createElement('li');
              listItem.textContent = `${key}: ${userInfo[key]}`;
              userInfoList.appendChild(listItem);
            }
          });

          // Show the button and chat container
          document.getElementById('showUserInfoBtn').style.display = 'block';
          document.getElementById('chatBox').style.display = 'block';
        })
        .catch((error) => {
          const errorCode = error.code;
          const errorMessage = error.message;
          document.getElementById('message').innerHTML = errorMessage;
        });
    }

    // Toggle user info display
    function toggleUserInfo() {
      const userInfoContainer = document.getElementById('userInfoContainer');
      userInfoContainer.style.display = userInfoContainer.style.display === 'none' ? 'block' : 'none';
    }
  </script>
</body>
</html>
